version: '3.8'
name: async_architecture_app
networks:
  aa_app_network:
    driver: bridge
volumes:
  redpanda: null
  postgres: null
services:
  #  business services
  task-tracker:
    image: async_architecture/task-tracker:0.1.0
    networks:
      - aa_app_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    environment:
      SOME_VAR: todo
    depends_on:
      - redpanda
  auth:
    image: async_architecture/auth:0.1.0
    networks:
      - aa_app_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    environment:
      SOME_VAR: todo
    depends_on:
      - redpanda
      - keycloak

  # postgres
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    networks:
      - aa_app_network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./infra/postgres:/docker-entrypoint-initdb.d

  # keycloak
  keycloak:
    image:  quay.io/keycloak/keycloak:latest
    container_name: keycloak
    ports:
      - 8081:8080
    networks:
      - aa_app_network
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME=localhost
    volumes:
      - ./infra/keycloak:/opt/keycloak/data/import
      - ./keycloak-to-kafka/target/scala-3.3.0/keycloak-to-kafka-assembly-0.1.0.jar:/opt/keycloak/providers/keycloak-to-kafka-assembly-0.1.0.jar
    command:
      - start-dev --import-realm
    depends_on:
      - postgres

  # redpanda
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.2
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
    networks:
      - aa_app_network
    healthcheck:
      test: [ "CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1" ]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
#  console:
#    image: docker.redpanda.com/redpandadata/console:v2.3.0
#    entrypoint: /bin/sh
#    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
#    environment:
#      CONFIG_FILEPATH: /tmp/config.yml
#      CONSOLE_CONFIG_FILE: |
#        kafka:
#          brokers: ["redpanda:9092"]
#          schemaRegistry:
#            enabled: true
#            urls: ["http://redpanda:8081"]
#        redpanda:
#          adminApi:
#            enabled: true
#            urls: ["http://redpanda:9644"]
#        connect:
#          enabled: true
#          clusters:
#            - name: local-connect-cluster
#              url: http://connect:8083
#    ports:
#      - 8080:8080
#    networks:
#      - aa_app_network
#    depends_on:
#      - redpanda
#  connect:
#    image: docker.redpanda.com/redpandadata/connectors:latest
#    hostname: connect
#    container_name: connect
#    networks:
#      - aa_app_network
#    # comment platform setting if running not on M1 Mac
#    platform: 'linux/amd64'
#    depends_on:
#      - redpanda
#    ports:
#      - "8083:8083"
#    environment:
#      CONNECT_CONFIGURATION: |
#        key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
#        value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
#        group.id=connectors-cluster
#        offset.storage.topic=_internal_connectors_offsets
#        config.storage.topic=_internal_connectors_configs
#        status.storage.topic=_internal_connectors_status
#        config.storage.replication.factor=-1
#        offset.storage.replication.factor=-1
#        status.storage.replication.factor=-1
#        offset.flush.interval.ms=1000
#        producer.linger.ms=50
#        producer.batch.size=131072
#      CONNECT_BOOTSTRAP_SERVERS: redpanda:9092
#      CONNECT_GC_LOG_ENABLED: "false"
#      CONNECT_HEAP_OPTS: -Xms512M -Xmx512M
#      CONNECT_LOG_LEVEL: info
